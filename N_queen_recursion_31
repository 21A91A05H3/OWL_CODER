//N queens
#include<bits/stdc++.h>
using namespace std;
bool isvalid(int i,int j,int n,vector<vector<int>>&grid){
	//check up
	int x=i;
	int y=j;
	while(x>=0){
		if(grid[x][y]==1)return false;
		x--;
	}
	
	//check up left
	x=i;
	y=j;
	while(x>=0 and y>=0){
		if(grid[x][y]==1) return false;
		x--;
		y--;
	}
	
	//check up right
	x=i;
	y=j;
	while(x>=0 and y<n){
		if(grid[x][y]==1) return false;
		x--;
		y++;
	}
	return true;
}
void arrange_nqueens(int row,int n,vector<vector<int>>&grid){
	//base case
	if(row==n){
		for(int k=0;k<n;k++){
			for(int l=0;l<n;l++){
				cout<<grid[k][l]<<" ";
			}		
			cout<<endl;
		}
		cout<<endl;
		return;
	}
	for(int i=0;i<n;i++){
		if(isvalid(row,i,n,grid)){
			grid[row][i]=1;
			arrange_nqueens(row+1,n,grid);
			grid[row][i]=0;
		}
	}
}
int main(){
	int n;
	cin>>n;
	vector<vector<int>>grid(n,vector<int>(n,0));
	arrange_nqueens(0,n,grid);
}
