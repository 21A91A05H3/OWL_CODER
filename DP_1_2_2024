https://atcoder.jp/contests/dp/tasks/dp_c

//#include<bits/stdc++.h>
//using namespace std;
//int dp[1000];
//int Fib(int n)
//{
//	if(n<=1)return n;
//	if(dp[n]!=-1)return dp[n];
//	return Fib(n-1)+Fib(n-2);
//}
//int main()
//{
//	int n;
//	cin>>n;
//	memset(dp,-1,sizeof(dp));
//	cout<<Fib(n);
//}

//#include<bits/stdc++.h>
//using namespace std;
//int dp[100000];
//int Fun(int idx,int a[],int n)
//{
//	//base
//	if(idx==n-1)return 0;
//	int left=abs(a[idx]=a[idx+1])+Fun(idx+1,a,n);
//	int right=INT_MAX;
//	if(idx+2<=n-1)
//	{
//		right=abs(a[idx]-a[idx+2])+Fun(idx+2,a,n);
//	}
//	return dp[idx]=min(left,right);
//}
//int main()
//{
//	int n;
//	cin>>n;
//	int a[n];
//	memset(dp,-1,sizeof(dp));
//	for(int i=0;i<n;i++)
//	{
//		cin>>a[i];
//	}
//	cout<<Fun(0,a,n);
//}
//frog jump
//4
//10 30 40 20
//30


#include<bits/stdc++.h>
using namespace std;
int dp[100000];
int Fun(int idx,int a[],int n,int k)
{
	//base
	if(idx==n-1)return 0;
	if(dp[idx]!=-1)return dp[idx];
	int ans=INT_MAX;
	for(int i=1;i<=k;i++)
	{
		if(idx+i<=n-1)
		{
			ans=min(ans,abs(a[idx]-a[idx+i])+Fun(idx+i,a,n,k));
		}
	}
	return ans;
}
int main()
{
	int n,k;
	cin>>n>>k;
	int a[n];
	memset(dp,-1,sizeof(dp));
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
	}
	cout<<Fun(0,a,n,k);
}
frog jump2
5 3
10 30 40 50 20
30


//  C- vacation




















